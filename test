<!DOCTYPE html>

<html lang="en">

<head>

    <meta charset="UTF-8">

    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <title>Patient Information</title>

    <style>

        body {

            font-family: Arial, sans-serif;

            margin: 20px;

        }

        h1 {

            color: #333;

            margin-bottom: 20px;

        }

        table {

            border-collapse: collapse;

            width: 100%;

            max-width: 800px;

            margin-top: 20px;

        }

        th, td {

            border: 1px solid #ddd;

            padding: 12px;

            text-align: left;

        }

        th {

            background-color: #f2f2f2;

            width: 30%;

        }

        .error {

            color: red;

            margin-top: 10px;

            padding: 10px;

            background-color: #ffeeee;

            border: 1px solid #ffcccc;

            border-radius: 4px;

        }

        .loading {

            color: #666;

            font-style: italic;

        }

        @media print {

            body * {

                visibility: hidden;

            }

            table, table * {

                visibility: visible;

            }

            table {

                position: absolute;

                left: 0;

                top: 0;

                width: 100%;

            }            

        }

        

        .email-form {

            margin: 20px 0;

            padding: 15px;

            border: 1px solid #ddd;

            border-radius: 5px;

            background-color: #f9f9f9;

        }

        .form-group {

            margin-bottom: 15px;

        }

        .form-group label {

            display: block;

            margin-bottom: 5px;

            font-weight: bold;

        }

        .form-group input, 

        .form-group textarea {

            width: 100%;

            padding: 8px;

            border: 1px solid #ddd;

            border-radius: 4px;

            box-sizing: border-box;

        }

        button {

            background-color: #4CAF50;

            color: white;

            padding: 10px 15px;

            border: none;

            border-radius: 4px;

            cursor: pointer;

        }

        button:disabled {

            background-color: #cccccc;

            cursor: not-allowed;

        }

        .status-message {

            margin-top: 10px;

            padding: 10px;

            border-radius: 4px;

        }

        .status-success { background-color: #dff0d8; color: #3c763d; }

        .status-error { background-color: #f2dede; color: #a94442; }

        .status-info { background-color: #d9edf7; color: #31708f; }


    </style>

</head>

<body>

    

    <button id="sendReportBtn">Email Report</button>

    <div id="emailForm" style="display: none;">

        <h3>Email Report</h3>

        <div class="form-group">

            <label for="emailTo">Recipient Email:</label>

            <input type="email" id="emailTo" required>

        </div>

        <div class="form-group">

            <label for="emailSubject">Subject:</label>

            <input type="text" id="emailSubject" value="Department Report">

        </div>

        <div class="form-group">

            <label for="emailMessage">Message:</label>

            <textarea id="emailMessage">Please find attached the department report.</textarea>

        </div>

        <button id="submitEmailBtn">Send Email</button>

        <div id="emailStatus" class="status-message"></div>

    </div>

    <div id="reportContent">

    <h1>Patient Information</h1>

    <div id="loading" class="loading">Loading patient data...</div>

    <div id="error" class="error" style="display: none;"></div>

    

    <table id="patientTable">

        <thead>

            <tr>

                <th>Field</th>

                <th>Value</th>

            </tr>

        </thead>

        <tbody id="patientData">

            <!-- Data will be inserted here -->

        </tbody>

    </table>
    </div>

    <script>

        // CORE EMAIL-SENDING FUNCTIONALITY

        // These functions must be present in all departmental reports

        /**

         * Shows status messages in the email form

         * @param {string} message - The status message to display

         * @param {string} type - Message type: 'info', 'success', or 'error'

         */

        function showStatus(message, type = 'info') {

            const statusElement = document.getElementById('emailStatus');

            statusElement.textContent = message;

            statusElement.className = `status-message status-${type}`;

        }

        /**

         * Validates email format

         * @param {string} email - Email address to validate

         * @returns {boolean} True if email is valid

         */

        function validateEmail(email) {

            const re = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;

            return re.test(email);

        }

        /**

         * Sends the report to the server for PDF generation and emailing

         */

        async function sendReportToServer() {

            const emailTo = document.getElementById('emailTo').value;

            const subject = document.getElementById('emailSubject').value;

            const message = document.getElementById('emailMessage').value;

            // Validate email - REQUIRED

            if (!validateEmail(emailTo)) {

                showStatus('Please enter a valid email address', 'error');

                return;

            }

            showStatus('Preparing report...', 'info');

            document.getElementById('submitEmailBtn').disabled = true;

            try {

                // Send to server - REQUIRED

                const response = await fetch('https://email-services-80v8.onrender.com/generate-and-send-pdf', {

                    method: 'POST',

                    headers: { 

                        'Content-Type': 'application/json',

                        'Accept': 'application/json'

                    },

                    body: JSON.stringify({

                        receiver: emailTo,

                        subject: subject,

                        message: message,

                        // Send the report content - REQUIRED

                        htmlContent: document.getElementById('reportContent').outerHTML

                    })

                });

                const result = await response.json();

                if (result.success) {

                    showStatus('Report emailed successfully!', 'success');

                } else {

                    throw new Error(result.message || "Failed to send report");

                }

            } catch (error) {

                console.error("Report error:", error);

                showStatus('Error: ' + error.message, 'error');

            } finally {

                document.getElementById('submitEmailBtn').disabled = false;

            }

        }

        // Initialize email form - REQUIRED

        document.addEventListener('DOMContentLoaded', () => {

            document.getElementById('sendReportBtn').addEventListener('click', () => {

                document.getElementById('emailForm').style.display = 'block';

            });

            document.getElementById('submitEmailBtn').addEventListener('click', sendReportToServer);

        });

        // ==================== //


        // CONFIGURATION - SET THESE VALUES

        const BASEROW_API_TOKEN = "gXyTndrAvSJCjaMcBnhAq2szoJSc4vmT"; // Replace with your actual token

        const ROW_ID = 1; // <-- CHANGE THIS TO YOUR PATIENT'S ROW ID

        // Automatically fetch and display data when page loads

        document.addEventListener('DOMContentLoaded', async function() {

            const loadingElement = document.getElementById('loading');

            const errorElement = document.getElementById('error');

            const table = document.getElementById('patientTable');

            const patientDataElement = document.getElementById('patientData');

            try {

                const apiUrl = `https://api.baserow.io/api/database/rows/table/323990/${ROW_ID}/?user_field_names=true`;

                const headers = {

                    'Authorization': `Token ${BASEROW_API_TOKEN}`,

                    'Content-Type': 'application/json'

                };

                const response = await fetch(apiUrl, { headers });

                if (!response.ok) {

                    throw new Error(`Server returned ${response.status}: ${response.statusText}`);

                }

                const data = await response.json();

                // Display the specific fields we want

                const fieldsToDisplay = [

                    'Patient Full Name',

                    'Sex',

                    'Age',

                    'Phone Number',

                    'Email Address',

                    'Residential Addresses'

                ];

                fieldsToDisplay.forEach(field => {

                    const row = document.createElement('tr');

                    const fieldCell = document.createElement('td');

                    const valueCell = document.createElement('td');

                    fieldCell.textContent = field;

                    valueCell.textContent = data[field] || 'Not specified';

                    row.appendChild(fieldCell);

                    row.appendChild(valueCell);

                    patientDataElement.appendChild(row);

                });

                loadingElement.style.display = 'none';

                table.style.display = 'table';

            } catch (error) {

                loadingElement.style.display = 'none';

                errorElement.textContent = `Failed to load patient data: ${error.message}`;

                errorElement.style.display = 'block';

                console.error('Error:', error);

            }

        });

    </script>

</body>

</html>
